{"version":3,"sources":["config.js","components/Auth.js","components/UserActions.js","components/Todo.js","components/TodoList.js","components/App.js","serviceWorker.js","index.js"],"names":["API_URL","process","Auth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","errorHandler","error","setState","showError","errorMessage","setTimeout","changeHandler","event","value","target","type","checked","defineProperty","name","toggleSignIn","isSignIn","state","submitAuth","preventDefault","_this$state","username","password","passConfirm","routeOptions","route","axios","post","then","res","data","token","Authorization","concat","rememberMe","localStorage","setItem","JSON","stringify","sessionStorage","authDataHandler","catch","err","message","response","remeberMe","_this$state2","react_default","a","createElement","className","onSubmit","required","placeholder","onChange","onClick","Component","UserActions","alertHandler","arguments","length","undefined","alertMessage","showMessage","isError","changPw","newPassword","patch","headers","user","console","signOut","clear","delete","signOutHandler","_React$createElement","_React$createElement2","Todo","toggleEdit","content","editable","submitUpdate","updateHandler","change","id","deletion","deleteHandler","_this$props","Fragment","TodoList","newEntry","title","todos","push","updateEntry","updateInfo","index","findIndex","e","assign","deleteEntry","splice","todosIsGetting","todosGetFailed","_this2","get","_this3","map","i","Todo_Todo","key","App","isAuth","parse","getItem","UserActions_UserActions","TodoList_TodoList","Auth_Auth","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a661386e.chunk.js","sourcesContent":["const API_URL = process.env.NODE_ENV !== 'production' ? process.env.REACT_APP_DEV_URL : process.env.REACT_APP_PROD_URL;\n\nexport default API_URL","import React, { Component } from 'react';\nimport axios from 'axios';\nimport API_URL from '../config';\n\nexport default class Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSignIn: true,\n      username: '',\n      password: '',\n      passConfirm: '',\n      remeberMe: false,\n      showError: false,\n      errorMessage: ''\n    };\n  }\n\n  // --------------EVENT HANDLERS------------------\n\n  errorHandler = error => {\n    this.setState({ showError: true, errorMessage: error });\n    setTimeout(() => {\n      this.setState({ showError: false });\n    }, 2500);\n  };\n\n  changeHandler = event => {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    this.setState({ [event.target.name]: value });\n  };\n\n  toggleSignIn = () => {\n    this.setState({ isSignIn: !this.state.isSignIn });\n  };\n\n  //Post request to server is triggered here with results being passed up to parent\n\n  submitAuth = event => {\n    event.preventDefault();\n\n    const { username, password, passConfirm, isSignIn } = this.state;\n\n    //dynamic url based on isSignIn flag\n    const routeOptions = { signIn: '/sign-in', signUp: '/sign-up' };\n    const route = isSignIn ? routeOptions.signIn : routeOptions.signUp;\n\n    //exit out of function early if the passwords don't match and send an alert\n    if (!isSignIn && password !== passConfirm) {\n      return this.errorHandler('passwords do not match');\n    }\n\n    axios\n      .post(API_URL + route, { username, password })\n      .then(res => {\n        // if it's in sign up mode, automatically sign in\n        if (!isSignIn) {\n          return axios.post(API_URL + routeOptions.signIn, { username, password });\n        }\n        return res;\n      })\n      .then(res => {\n        res.data.token = { Authorization: `Bearer ${res.data.token}` };\n        // remember me determines whether auth goes to local or session storage\n        if (this.state.rememberMe) {\n          localStorage.setItem('user', JSON.stringify(res.data));\n        } else {\n          sessionStorage.setItem('user', JSON.stringify(res.data));\n        }\n\n        //pass to parent\n        this.props.authDataHandler(res.data);\n      })\n      .catch(err => {\n        const message = err.response.data;\n        this.errorHandler(message);\n      });\n  };\n\n  render() {\n    const { isSignIn, username, password, passConfirm, errorMessage, showError } = this.state;\n    return (\n      <div className='section'>\n        <form className='mb-2' onSubmit={this.submitAuth}>\n          <div className='field'>\n            <label className='label'>{isSignIn ? 'Sign in' : 'Sign up'}</label>\n            <div className='control'>\n              <input\n                required\n                className='input'\n                name='username'\n                placeholder='Enter username'\n                value={username}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <div className='field'>\n            <div className='control'>\n              <input\n                required\n                className='input'\n                name='password'\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          {!isSignIn && (\n            <div className='field'>\n              <input\n                required\n                className='input'\n                name='passConfirm'\n                type='password'\n                placeholder='Confirm password'\n                value={passConfirm}\n                onChange={this.changeHandler}\n              />\n            </div>\n          )}\n          <label className='checkbox'>\n            <input name='rememberMe' type='checkbox' onChange={this.changeHandler} />\n            Remember me\n          </label>\n          <div className='field'>\n            <div className='control'>\n              <input className='button is-primary is-fullwidth' type='submit' />\n            </div>\n          </div>\n          {showError && <p className='has-text-danger is-centered'>{errorMessage}</p>}\n        </form>\n\n        <button className='button is-secondary is-fullwidth' onClick={this.toggleSignIn}>\n          {isSignIn ? 'Register' : 'Sign in'}\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport API_URL from '../config';\n\n//User actions is its own component to help with readability\nexport default class UserActions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passConfirm: '',\n      newPassword: '',\n      alertMessage: '',\n      showMessage: false,\n      isError: false\n    };\n  }\n\n  // ---------------- EVENT HANDLERS ------------------\n\n  // general alert handler that manipulates flags that determine if message is visible and what colour it should be\n  alertHandler = (message, error = false) => {\n    this.setState({ alertMessage: message, showMessage: true, isError: error ? true : false });\n    setTimeout(() => {\n      this.setState({ showMessage: false, isError: false });\n    }, 2500);\n  };\n\n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  // axios patch is done here. similar flow as sign in\n  changPw = event => {\n    const { passConfirm, newPassword } = this.state;\n    event.preventDefault();\n\n    if (passConfirm !== newPassword) {\n      return this.alertHandler('Passwords do not match', true);\n    }\n    axios\n      .patch(\n        API_URL + '/change-pass',\n        { passConfirm, newPassword },\n        { headers: this.props.user.token }\n      )\n      .then(() => {\n        this.setState({\n          newPassword: '',\n          passConfirm: ''\n        });\n        this.alertHandler('Password Successfully changed');\n      })\n      .catch(err => {\n        console.error(err);\n        this.alertHandler('Something went wrong, try again later', true);\n      });\n  };\n\n  // sign out clears local and session before API call to prevent possible stale token\n  signOut = () => {\n    localStorage.clear();\n    sessionStorage.clear();\n    axios\n      .delete(API_URL + '/sign-out', {\n        headers: this.props.user.token\n      })\n      .then(res => {\n        this.props.signOutHandler();\n      })\n      .catch(err => {\n        this.alertHandler('Something went wrong! Try refreshing and signing back in');\n        console.error(err.response);\n      });\n  };\n\n  //----------------- RENDER-------------------\n  render() {\n    const { passConfirm, newPassword, showMessage, alertMessage, isError } = this.state;\n    return (\n      <div>\n        <form className='my-3' onSubmit={this.changPw}>\n          <div className='field'>\n            <label className='label'>Change Password</label>\n            <div className='control'>\n              <input\n                className='input'\n                type='text'\n                type='password'\n                name='newPassword'\n                value={newPassword}\n                placeholder='New password'\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className='control'>\n              <input\n                className='input'\n                type='text'\n                type='password'\n                name='passConfirm'\n                value={passConfirm}\n                placeholder='Confirm new password'\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <input\n            className='button is-fullwidth is-outlined is-info'\n            type='submit'\n            value='Change Password'\n          />\n        </form>\n        <button className='button is-fullwidth is-outlined is-danger' onClick={this.signOut}>\n          Sign out\n        </button>\n        {showMessage && (\n          <p className={isError ? 'has-text-danger' : 'has-text-info'}>{alertMessage}</p>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editable: false,\n      value: this.props.content\n    };\n  }\n\n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  toggleEdit = () => {\n    this.setState({ value: this.props.content, editable: !this.state.editable });\n  };\n\n  //rather than pass auth data down two levels so that the API request lives here, it seems easier to pass data the entire function down and call it with the appropriate data frome here.\n  submitUpdate = event => {\n    event.preventDefault();\n\n    this.props.updateHandler({\n      change: this.state.value,\n      id: this.props.id\n    });\n    this.toggleEdit();\n  };\n  deletion = () => {\n    this.props.deleteHandler(this.props.id);\n  };\n\n  render() {\n    const { value, editable } = this.state;\n    const { id, content } = this.props;\n    return (\n      <div>\n        {editable && (\n          <form onSubmit={this.submitUpdate}>\n            <div className='field has-addons'>\n              <div className='control'>\n                <input\n                  className='input'\n                  type='text'\n                  name='value'\n                  value={value}\n                  onChange={this.changeHandler}\n                />\n              </div>\n              <div className='control'>\n                <input className='button is-outlined is-primary' type='submit' />\n              </div>\n            </div>\n          </form>\n        )}\n\n        {!editable && (\n          <>\n            <p className='is-size-4' id={id}>\n              {content}\n            </p>\n            <button className='button is-outlined is-danger' onClick={this.deletion}>\n              delete\n            </button>\n          </>\n        )}\n\n        <button className='button is-outlined is-info' onClick={this.toggleEdit}>\n          {editable ? 'cancel' : 'edit'}\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport API_URL from '../config';\nimport Todo from './Todo';\n\nconst route = '/todos';\n\nexport default class TodoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [],\n      todosIsGetting: true,\n      todosGetFailed: false,\n      alertMessage: '',\n      title: '',\n      isError: false\n    };\n  }\n  alertHandler = (message, error = false) => {\n    this.setState({ alertMessage: message, showMessage: true, isError: error ? true : false });\n    setTimeout(() => {\n      this.setState({ showMessage: false, isError: false });\n    }, 2500);\n  };\n\n  changeHandler = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  // Unlike auth and user actions, todolist does not send data up because todos don't need to be a global object.\n  newEntry = event => {\n    event.preventDefault();\n    if (this.state.title.length === 0) {\n      this.alertHandler('Entry cannot be empty', true);\n    }\n    axios\n      .post(API_URL + route, { title: this.state.title }, { headers: this.props.user.token })\n      .then(res => {\n        const todos = this.state.todos;\n        todos.push(res.data);\n        this.setState({ todos });\n      })\n      .catch(err => {\n        console.error(err);\n        this.alertHandler('Something went wrong', true);\n      });\n  };\n\n  //update and delete handlers are actually called from the child todo component. Having the child pass in info for these functions to process makes the most sense in my head\n  updateEntry = updateInfo => {\n    axios\n      .patch(\n        API_URL + route + '/' + updateInfo.id,\n        { title: updateInfo.change },\n        { headers: this.props.user.token }\n      )\n      .then(() => {\n        const { todos } = this.state;\n        const index = todos.findIndex(e => e.id === updateInfo.id);\n        todos[index] = Object.assign({}, todos[index], { title: updateInfo.change });\n        this.setState({ todos });\n      })\n      .catch(err => {\n        console.error(err);\n        this.alertHandler('Something went wrong', true);\n      });\n  };\n\n  deleteEntry = id => {\n    axios\n      .delete(API_URL + route + '/' + id, { headers: this.props.user.token })\n      .then(() => {\n        const { todos } = this.state;\n        const index = todos.findIndex(e => e.id === id);\n        todos.splice(index, 1);\n        this.setState({ todos });\n      })\n      .catch(err => {\n        console.error(err);\n        this.alertHandler('Something went wrong', true);\n      });\n  };\n\n  //get request on mount. This, combined with session/local storage allows a refresh to refetch data. may move this to constructor\n  componentDidMount() {\n    axios\n      .get(API_URL + route, {\n        headers: this.props.user.token\n      })\n      .then(res => {\n        this.setState({ todosIsGetting: false, todos: res.data });\n      })\n      .catch(err => {\n        this.setState({ todosIsGetting: false, todosGetFailed: true });\n        console.error(err);\n      });\n  }\n\n  render() {\n    const {\n      todos,\n      todosGetFailed,\n      todosIsGetting,\n      title,\n      showMessage,\n      alertMessage,\n      isError\n    } = this.state;\n    return (\n      <div className='container mt-3'>\n        <h1 className='title'>Things I need to do</h1>\n        <form className='mb-3' onSubmit={this.newEntry}>\n          <div className='field'>\n            <label className='label'>Add a new entry</label>\n            <div className='field has-addons'>\n              <div className='control'>\n                <input\n                  required\n                  className='input'\n                  type='text'\n                  name='title'\n                  value={title}\n                  onChange={this.changeHandler}\n                />\n              </div>\n              <div className='control' />\n              <button className='button is-outlined is-primary' type='submit'>\n                Add\n              </button>\n            </div>\n            {showMessage && (\n              <p className={'help ' + (isError ? 'is-danger' : 'is-info')}>{alertMessage}</p>\n            )}\n          </div>\n        </form>\n        <div>\n          {todosIsGetting ? (\n            <p>Loading...</p>\n          ) : todosGetFailed ? (\n            <p>Something went wrong! try refreshing</p>\n          ) : (\n            todos.map((e, i) => {\n              return (\n                <Todo\n                  key={i}\n                  id={e.id}\n                  content={e.title}\n                  updateHandler={this.updateEntry}\n                  deleteHandler={this.deleteEntry}\n                />\n              );\n            })\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Auth from './Auth';\nimport UserActions from './UserActions';\nimport TodoList from './TodoList';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    let isAuth, user;\n    if (sessionStorage.length !== 0) {\n      user = JSON.parse(sessionStorage.getItem('user'));\n    }\n    if (localStorage.length !== 0) {\n      user = JSON.parse(localStorage.getItem('user'));\n    }\n\n    isAuth = user ? true : false;\n\n    this.state = {\n      isAuth,\n      user\n    };\n  }\n\n  //auth data lives here so both auth and useractions components have access to it\n  authDataHandler = data => {\n    this.setState({ isAuth: true, user: data });\n  };\n\n  //signout handler clears state. local and session storage clearing happen in useractions component\n  signOutHandler = () => {\n    this.setState({\n      isAuth: false,\n      user: null\n    });\n  };\n\n  render() {\n    const { isAuth, user } = this.state;\n    return (\n      <div className='container'>\n        <div className='columns is-8 is-variable is-centered is-vcentered'>\n          {!isAuth ? (\n            <div className='column is-two-fifths'>\n              <Auth authDataHandler={this.authDataHandler} />\n            </div>\n          ) : (\n            <>\n              <div className='column is-one-fifth'>\n                <UserActions user={user} signOutHandler={this.signOutHandler} />\n              </div>\n              <div className='column'>\n                <TodoList user={user} />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}